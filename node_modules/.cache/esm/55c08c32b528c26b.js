let express,residences,prices,rooms,bathrooms,smoking,swaggerUi,swaggerDocument,data;_b52‍.w("express",[["default",["express"],function(v){express=v}]]);_b52‍.w("./routes/residences",[["default",["residences"],function(v){residences=v}]]);_b52‍.w("./routes/prices",[["default",["prices"],function(v){prices=v}]]);_b52‍.w("./routes/rooms",[["default",["rooms"],function(v){rooms=v}]]);_b52‍.w("./routes/bathrooms",[["default",["bathrooms"],function(v){bathrooms=v}]]);_b52‍.w("./routes/smoking",[["default",["smoking"],function(v){smoking=v}]]);_b52‍.w("swagger-ui-express",[["default",["swaggerUi"],function(v){swaggerUi=v}]]);_b52‍.w("../swagger.json",[["default",["swaggerDocument"],function(v){swaggerDocument=v}]]);_b52‍.w("../data",[["default",["data"],function(v){data=v}]]);









const app = express();
const PORT = process.env.PORT || 3001;

app.use (express.json());
app.use ("/api/v1/docs", swaggerUi.serve, swaggerUi.setup(swaggerDocument));

app.use("/api/v1", residences.json);
app.use("/api/v1", prices);
app.use("/api/v1", rooms);
app.use("/api/v1", bathrooms);
app.use("/api/v1", smoking);

app.get('/', (req, res) => {
    res.send('test');
});

app.get('/api/v1/residences',(req,res)=> {
    res.json(data.residences).status(200)
});

app.get('/api/v1/residences/:id',(req,res)=>{
    let id = parseInt(req.params.id);
    let residences = data.residences;
    let response = residences.find(residences => residences.id === id)
    if(!response) {
        res.status(404).json({"message": `Residence with ID: ${id} doesn't exist`});
    }
    res.json(response).status(200);

});

app.listen(PORT, ()=> {
    console.log(`Server listening on port: ${PORT}`);
});

